// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  MANAGER
  ADMIN
}

model user {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  pseudo    String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  role      Role     @default(USER)
  isActif   Boolean  @default(true)
}

model category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now()) @db.Timestamp(6)
  isActif   Boolean  @default(true)
  items     item[]

  family   family @relation(fields: [familyId], references: [id])
  familyId Int
}

model family {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  createdAt  DateTime   @default(now()) @db.Timestamp(6)
  isActif    Boolean    @default(true)
  categories category[]
}

model foundOn {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now()) @db.Timestamp(6)
  isActif   Boolean  @default(true)

  itemOnFoundOn itemOnFoundOn[]
}

model item {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  createdAt   DateTime @default(now()) @db.Timestamp(6)
  isActif     Boolean  @default(true)
  category    category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  value       Int      @default(0)
  ttMax       Int      @default(0)
  imageUrlId  String?
  isStackable Boolean
  isLimited   Boolean

  itemOnFoundOn itemOnFoundOn[]
}

model itemOnFoundOn {
  item      item    @relation(fields: [itemId], references: [id])
  itemId    Int
  foundOn   foundOn @relation(fields: [foundOnId], references: [id])
  foundOnId Int

  @@id([itemId, foundOnId])
}
